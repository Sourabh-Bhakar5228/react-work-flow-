{"ast":null,"code":"var _jsxFileName = \"D:\\\\new kjdsalkf\\\\workflow-app\\\\src\\\\components\\\\WorkflowBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactFlow, { addEdge, MiniMap, Controls, Background, applyNodeChanges, applyEdgeChanges } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [];\nconst initialEdges = [];\nconst WorkflowBuilder = () => {\n  _s();\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [workflowName, setWorkflowName] = useState(\"\");\n  const onNodesChange = changes => setNodes(nds => applyNodeChanges(changes, nds));\n  const onEdgesChange = changes => setEdges(eds => applyEdgeChanges(changes, eds));\n  const onConnect = params => setEdges(eds => addEdge(params, eds));\n  const handleSaveWorkflow = async () => {\n    try {\n      const response = await axios.post(\"/workflow/save\", {\n        nodes,\n        edges,\n        name: workflowName\n      });\n      alert(\"Workflow saved successfully! ID: \" + response.data.workflowId);\n    } catch (error) {\n      console.error(\"Error saving workflow:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Workflow Name\",\n      value: workflowName,\n      onChange: e => setWorkflowName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveWorkflow,\n      children: \"Save Workflow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkflowBuilder, \"06KCj/38L4sFJx+/zBgOHPeeLMU=\");\n_c = WorkflowBuilder;\nexport default WorkflowBuilder;\nvar _c;\n$RefreshReg$(_c, \"WorkflowBuilder\");","map":{"version":3,"names":["React","useState","ReactFlow","addEdge","MiniMap","Controls","Background","applyNodeChanges","applyEdgeChanges","axios","jsxDEV","_jsxDEV","initialNodes","initialEdges","WorkflowBuilder","_s","nodes","setNodes","edges","setEdges","workflowName","setWorkflowName","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","params","handleSaveWorkflow","response","post","name","alert","data","workflowId","error","console","style","height","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","fitView","onClick","_c","$RefreshReg$"],"sources":["D:/new kjdsalkf/workflow-app/src/components/WorkflowBuilder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  applyNodeChanges,\r\n  applyEdgeChanges,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\nimport axios from \"axios\";\r\n\r\nconst initialNodes = [];\r\nconst initialEdges = [];\r\n\r\nconst WorkflowBuilder = () => {\r\n  const [nodes, setNodes] = useState(initialNodes);\r\n  const [edges, setEdges] = useState(initialEdges);\r\n  const [workflowName, setWorkflowName] = useState(\"\");\r\n\r\n  const onNodesChange = (changes) =>\r\n    setNodes((nds) => applyNodeChanges(changes, nds));\r\n  const onEdgesChange = (changes) =>\r\n    setEdges((eds) => applyEdgeChanges(changes, eds));\r\n  const onConnect = (params) => setEdges((eds) => addEdge(params, eds));\r\n\r\n  const handleSaveWorkflow = async () => {\r\n    try {\r\n      const response = await axios.post(\"/workflow/save\", {\r\n        nodes,\r\n        edges,\r\n        name: workflowName,\r\n      });\r\n      alert(\"Workflow saved successfully! ID: \" + response.data.workflowId);\r\n    } catch (error) {\r\n      console.error(\"Error saving workflow:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 600 }}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Workflow Name\"\r\n        value={workflowName}\r\n        onChange={(e) => setWorkflowName(e.target.value)}\r\n      />\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        fitView\r\n      >\r\n        <MiniMap />\r\n        <Controls />\r\n        <Background />\r\n      </ReactFlow>\r\n      <button onClick={handleSaveWorkflow}>Save Workflow</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkflowBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}