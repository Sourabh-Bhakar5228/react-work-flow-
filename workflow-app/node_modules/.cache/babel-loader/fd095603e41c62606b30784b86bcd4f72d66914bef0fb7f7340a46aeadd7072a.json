{"ast":null,"code":"var _jsxFileName = \"D:\\\\new kjdsalkf\\\\workflow-app\\\\src\\\\components\\\\ExecuteWorkflow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExecuteWorkflow = () => {\n  _s();\n  const [workflows, setWorkflows] = useState([]);\n  const [selectedWorkflow, setSelectedWorkflow] = useState(\"\");\n  const [csvFile, setCsvFile] = useState(null);\n  useEffect(() => {\n    // Fetch workflows from backend\n    const fetchWorkflows = async () => {\n      try {\n        const response = await axios.get(\"/workflow\");\n        setWorkflows(response.data);\n      } catch (error) {\n        console.error(\"Error fetching workflows:\", error);\n      }\n    };\n    fetchWorkflows();\n  }, []);\n  const handleFileChange = e => {\n    setCsvFile(e.target.files[0]);\n  };\n  const handleWorkflowExecution = async () => {\n    if (!csvFile || !selectedWorkflow) {\n      alert(\"Please select a workflow and upload a file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", csvFile);\n    formData.append(\"workflowId\", selectedWorkflow);\n    try {\n      const response = await axios.post(\"/workflow/execute\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Workflow executed:\", response.data);\n      alert(\"Workflow executed successfully!\");\n    } catch (error) {\n      console.error(\"Error executing workflow:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Execute Workflow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"workflowSelect\",\n      children: \"Select Workflow: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"workflowSelect\",\n      value: selectedWorkflow,\n      onChange: e => setSelectedWorkflow(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Workflow --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), workflows.map(workflow => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: workflow._id,\n        children: workflow.name\n      }, workflow._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"csvFile\",\n      children: \"Upload CSV: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"csvFile\",\n      onChange: handleFileChange,\n      accept: \".csv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWorkflowExecution,\n      children: \"Execute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ExecuteWorkflow, \"TsMSxhin2vKyf4M0d0C5axrySDQ=\");\n_c = ExecuteWorkflow;\nexport default ExecuteWorkflow;\nvar _c;\n$RefreshReg$(_c, \"ExecuteWorkflow\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ExecuteWorkflow","_s","workflows","setWorkflows","selectedWorkflow","setSelectedWorkflow","csvFile","setCsvFile","fetchWorkflows","response","get","data","error","console","handleFileChange","e","target","files","handleWorkflowExecution","alert","formData","FormData","append","post","headers","log","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","map","workflow","_id","name","type","accept","onClick","_c","$RefreshReg$"],"sources":["D:/new kjdsalkf/workflow-app/src/components/ExecuteWorkflow.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ExecuteWorkflow = () => {\r\n  const [workflows, setWorkflows] = useState([]);\r\n  const [selectedWorkflow, setSelectedWorkflow] = useState(\"\");\r\n  const [csvFile, setCsvFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch workflows from backend\r\n    const fetchWorkflows = async () => {\r\n      try {\r\n        const response = await axios.get(\"/workflow\");\r\n        setWorkflows(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching workflows:\", error);\r\n      }\r\n    };\r\n    fetchWorkflows();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setCsvFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleWorkflowExecution = async () => {\r\n    if (!csvFile || !selectedWorkflow) {\r\n      alert(\"Please select a workflow and upload a file.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", csvFile);\r\n    formData.append(\"workflowId\", selectedWorkflow);\r\n\r\n    try {\r\n      const response = await axios.post(\"/workflow/execute\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      console.log(\"Workflow executed:\", response.data);\r\n      alert(\"Workflow executed successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error executing workflow:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Execute Workflow</h2>\r\n      <label htmlFor=\"workflowSelect\">Select Workflow: </label>\r\n      <select\r\n        id=\"workflowSelect\"\r\n        value={selectedWorkflow}\r\n        onChange={(e) => setSelectedWorkflow(e.target.value)}\r\n      >\r\n        <option value=\"\">-- Select Workflow --</option>\r\n        {workflows.map((workflow) => (\r\n          <option key={workflow._id} value={workflow._id}>\r\n            {workflow.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <br />\r\n      <label htmlFor=\"csvFile\">Upload CSV: </label>\r\n      <input\r\n        type=\"file\"\r\n        id=\"csvFile\"\r\n        onChange={handleFileChange}\r\n        accept=\".csv\"\r\n      />\r\n\r\n      <br />\r\n      <button onClick={handleWorkflowExecution}>Execute</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExecuteWorkflow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}